name: 🐧🧹 HealthChecks 🖳🗑️
#MAX_RUNTIME: 02 Minutes */10 * * * * 

on:
  #push:
  workflow_dispatch:
  schedule:
   - cron: "0 */4 * * *"  # Every 04 Hrs

env:
  GITHUB_TOKEN: "${{ secrets.TOOLPACKS_GHRO }}"
  GITLAB_TOKEN: "${{ secrets.TOOLPACKS_GLRO }}"
  HF_TOKEN: "${{ secrets.TOOLPACKS_HFRO }}"
  RCLONE_CF_R2_PUB: "${{ secrets.RCLONE_CF_R2_PUB }}"
  R2_PUB_REPO: "https://pub.ajam.dev/repos/pkgforge/pkgcache"
jobs:
#------------------------------------------------------------------------------------#
  check_build_status:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check Build Packages workflow status
        id: check
        run: |
          #presets
          set +x ; set +e
          #-------------#
          AARCH64_STATUS="$(curl -qfsSL -H "Authorization: bearer ${GITHUB_TOKEN}" "https://api.github.com/repos/pkgforge/pkgcache/actions/workflows/build_aarch64_Linux.yaml/runs?status=in_progress" | jq '.total_count')" && export AARCH64_STATUS="${AARCH64_STATUS}"
          X86_64_STATUS="$(curl -qfsSL -H "Authorization: bearer ${GITHUB_TOKEN}" "https://api.github.com/repos/pkgforge/pkgcache/actions/workflows/build_x86_64_Linux.yaml/runs?status=in_progress" | jq '.total_count')" && export X86_64_STATUS="${X86_64_STATUS}"
          if [ "${X86_64_STATUS}" -eq "0" ] && [ "${AARCH64_STATUS}" -eq "0" ]; then
            echo "should_run=true" >> "${GITHUB_OUTPUT}"
          else
            echo "should_run=false" >> "${GITHUB_OUTPUT}"
          fi
        continue-on-error: true
#------------------------------------------------------------------------------------#
  sync-metadata:
    needs: check_build_status
    if: needs.check_build_status.outputs.should_run == 'true'  
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      #- name: Debloat Runner
      #  run: |
      #    #Presets
      #    set +x ; set +e
      #    #--------------#
      #    bash <(curl -qfsSL "https://pub.ajam.dev/repos/Azathothas/Arsenal/misc/Github/Runners/Ubuntu/debloat.sh")
      #  continue-on-error: true
        
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main
          filter: "blob:none"

      - name: Install Addons
        run: |
          #presets
          set +x ; set +e
          #-------------#
          bash <(curl -qfsSL "https://pub.ajam.dev/repos/Azathothas/Arsenal/misc/Linux/install_dev_tools.sh")
        continue-on-error: true
        
      - name: Install to-capnp
        run: |
          #presets
          set +x ; set +e
          #-------------#
          sudo curl -qfsSL "https://github.com/QaidVoid/to-capnp/releases/download/nightly/to-capnp-nightly-$(uname -m)-linux" -o "/usr/local/bin/to-capnp" && sudo chmod +x "/usr/local/bin/to-capnp"
          if ! command -v to-capnp &> /dev/null; then
             echo -e "\n[+] to-capnp NOT Installed\n"
           exit 1
          fi
        continue-on-error: false

      - name: Setup Env
        run: |
          #presets
          set +x ; set +e
          #-------------#
          #tmp
          SYSTMP="$(dirname $(mktemp -u))" && export SYSTMP="${SYSTMP}"
          echo "SYSTMP=${SYSTMP}" >> "$GITHUB_ENV"
          #GH Dirs
          mkdir -p "${GITHUB_WORKSPACE}/main/aarch64-Linux"
          mkdir -p "${GITHUB_WORKSPACE}/main/x86_64-Linux"
          #Setup Flatpak
          sudo apt update -y -qq
          sudo apt install flatpak -y
          sudo usermod -aG "_flatpak" "runner"
          #-------------#
          #Setup HF
          git config --global "credential.helper" store
          git config --global "user.email" "AjamX101@gmail.com"
          git config --global "user.name" "Azathothas"
          #huggingface-cli login --token "${HF_TOKEN}" --add-to-git-credential
          huggingface-cli login --token "${HF_TOKEN}" --add-to-git-credential >/dev/null 2>&1     
          #-------------#
          ##Setup rClone
          mkdir -p "$HOME/.config/rclone"
          echo "${{ secrets.RCLONE_CF_R2_PUB }}" > "$HOME/.config/rclone/rclone.conf"
          export RCLONE_STATS="120s" ; echo "RCLONE_STATS=$RCLONE_STATS" >> "${GITHUB_ENV}"
          #-------------#
          ##User-Agent
          USER_AGENT="$(curl -qfsSL 'https://pub.ajam.dev/repos/Azathothas/Wordlists/Misc/User-Agents/ua_chrome_macos_latest.txt')" && export USER_AGENT="${USER_AGENT}"
          echo "USER_AGENT=${USER_AGENT}" >> "${GITHUB_ENV}"
        continue-on-error: true

      - name: Dos2Unix Everything
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main"
          find . -type f ! -path "./.git/*" -exec dos2unix {} \; 2>/dev/null
        continue-on-error: true

      - name: ActionLint
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main"
          find ".github/workflows" -type f -name "*ml" -exec actionlint {} \;
        continue-on-error: true

      - name: Shellcheck
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main"
          find ".github" -type f -name '*.sh' -exec shellcheck --exclude="SC2261" --severity=error "{}" \; 2>/dev/null | tee "${GITHUB_WORKSPACE}/main/.github/shellcheck.txt"
        continue-on-error: true

      - name: YAMLint
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main/.github/scripts/aarch64-Linux/pkgs"
          find "." -name '*.yaml' -exec sh -c 'for file; do bins=$(yq .bins[] "$file"); if [ "$(echo "$bins" | wc -l)" -eq 1 ] && [ "$(echo "$bins" | wc -w)" -gt 1 ]; then echo "$file --> $file.invalid";  mv "$file" "$file.invalid" ; fi; done' sh {} +
          cd "${GITHUB_WORKSPACE}/main/.github/scripts/x86_64-Linux/pkgs"
          find "." -name '*.yaml' -exec sh -c 'for file; do bins=$(yq .bins[] "$file"); if [ "$(echo "$bins" | wc -l)" -eq 1 ] && [ "$(echo "$bins" | wc -w)" -gt 1 ]; then echo "$file --> $file.invalid";  mv "$file" "$file.invalid" ; fi; done' sh {} +
        continue-on-error: true

      - name: Gen Metadata (aarch64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          pushd "$(mktemp -d)" >/dev/null 2>&1
           export HOST_TRIPLET="aarch64-Linux"
           #source <(curl -qfsSL "https://l.ajam.dev/hf-gen-meta-main")
           source <(curl -qfsSL "https://raw.githubusercontent.com/pkgforge/pkgcache/main/.github/scripts/hf_gen_meta_main.sh")
           hf_gen_meta_main
          popd "$(mktemp -d)" >/dev/null 2>&1
        continue-on-error: true

      - name: Sync Metadata (aarch64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          pushd "${GITHUB_WORKSPACE}/main" >/dev/null 2>&1
           mkdir -p "${GITHUB_WORKSPACE}/main/aarch64-Linux"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux/BUILD.log.txt" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/BUILD.log.txt"
           curl -qfsSL "https://pub.ajam.dev/repos/pkgforge/pkgcache/aarch64-Linux/BUILD.gh.log.txt" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/BUILD.gh.log.txt"
           curl -qfsSL "https://pub.ajam.dev/repos/pkgforge/pkgcache/aarch64-Linux/BUILD_FAILED.gh.log.txt" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/BUILD_FAILED.gh.log.txt"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux/BLAKE3SUM.json" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/BLAKE3SUM.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux/FILE.json" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/FILE.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux/METADATA.json" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux/METADATA.min.json" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.min.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux/SHA256SUM.json" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/SHA256SUM.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux/SIZE.json" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/SIZE.json"
          popd >/dev/null 2>&1
        continue-on-error: true

      - name: Gen Metadata (x86_64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          pushd "$(mktemp -d)" >/dev/null 2>&1
           export HOST_TRIPLET="x86_64-Linux"
           #source <(curl -qfsSL "https://l.ajam.dev/hf-gen-meta-main")
           source <(curl -qfsSL "https://raw.githubusercontent.com/pkgforge/pkgcache/main/.github/scripts/hf_gen_meta_main.sh")
           hf_gen_meta_main
          popd "$(mktemp -d)" >/dev/null 2>&1
        continue-on-error: true

      - name: Sync Metadata (x86_64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          pushd "${GITHUB_WORKSPACE}/main" >/dev/null 2>&1
           mkdir -p "${GITHUB_WORKSPACE}/main/x86_64-Linux"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux/BUILD.log.txt" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/BUILD.log.txt"
           curl -qfsSL "https://pub.ajam.dev/repos/pkgforge/pkgcache/x86_64-Linux/BUILD.gh.log.txt" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/BUILD.gh.log.txt"
           curl -qfsSL "https://pub.ajam.dev/repos/pkgforge/pkgcache/x86_64-Linux/BUILD_FAILED.gh.log.txt" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/BUILD_FAILED.gh.log.txt"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux/BLAKE3SUM.json" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/BLAKE3SUM.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux/FILE.json" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/FILE.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux/METADATA.json" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux/METADATA.min.json" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.min.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux/SHA256SUM.json" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/SHA256SUM.json"
           curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux/SIZE.json" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/SIZE.json"
          popd >/dev/null 2>&1
        continue-on-error: true

      - name: Generate Flatpak Metdata
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          #Generate Data
          sudo flatpak remote-add --if-not-exists flathub "https://dl.flathub.org/repo/flathub.flatpakrepo"
          flatpak --user remote-add --if-not-exists flathub "https://dl.flathub.org/repo/flathub.flatpakrepo" 2>/dev/null
          sudo flatpak search "cpu-x"
          sudo flatpak install --noninteractive --or-update --assumeyes flathub "io.github.thetumultuousunicornofdarkness.cpu-x"
          ls "/var/lib/flatpak/appstream/flathub/x86_64/active/" -lah
          if command -v flatpak &> /dev/null; then
             FLATPAK_APPSTREAM="$(sudo find "/var/lib/flatpak" -type f -name "appstream.xml" -print 2>/dev/null | xargs realpath | head -n 1)" && export FLATPAK_APPSTREAM="${FLATPAK_APPSTREAM}"
             if [[ -f "${FLATPAK_APPSTREAM}" ]] && [[ $(stat -c%s "${FLATPAK_APPSTREAM}") -gt 10000 ]]; then
               cat "${FLATPAK_APPSTREAM}" >  "${GITHUB_WORKSPACE}/main/FLATPAK_APPSTREAM.xml"
               rm -rvf "/tmp/FLATPAK_APPS.tmp.txt" 2>/dev/null
               clean_xml() {
                   local LINE="$1"
                   local TAG="$2"
                   echo "${LINE}" | sed -n "s|.*<${TAG}>\(.*\)</${TAG}>.*|\1|p"
               }
               declare -A STORED_ID
               readarray -t XML_LINES < "${FLATPAK_APPSTREAM}"
               TOTAL_LINES=${#XML_LINES[@]}
               for ((i = 0; i < TOTAL_LINES; i++)); do
                   LINE="${XML_LINES[i]}"
                   if [[ $LINE =~ \<id\> ]]; then
                       APP_ID=$(clean_xml "${LINE}" "id")
                       [[ -n "${STORED_ID[${APP_ID}]}" ]] && continue
                       NAME=""
                       SUMMARY=""
                       for ((j = i + 1; j < i + 10 && j < TOTAL_LINES; j++)); do
                           NEXT_LINE="${XML_LINES[j]}"
                           if [[ -z "${NAME}" && ${NEXT_LINE} =~ \<name\> ]]; then
                               NAME=$(clean_xml "${NEXT_LINE}" "name")
                           elif [[ -z "${SUMMARY}" && ${NEXT_LINE} =~ \<summary\> ]]; then
                               SUMMARY=$(clean_xml "${NEXT_LINE}" "summary")
                           fi
                           [[ -n "${NAME}" && -n "${SUMMARY}" ]] && break
                       done
                       if [[ -n "${APP_ID}" && -n "${NAME}" && -n "${SUMMARY}" ]]; then
                           STORED_ID["${APP_ID}"]=1
                           printf "NAME: %s\nAPP_ID: %s\nDescr: %s\n-----------------------------\n" \
                               "${NAME}" "${APP_ID}" "${SUMMARY}"
                       fi
                   fi
               done | tee -a "/tmp/FLATPAK_APPS.tmp.txt"
             fi
          fi
          #Sanity Check & Append
          if [[ -f "/tmp/FLATPAK_APPS.tmp.txt" ]] && [[ $(stat -c%s "/tmp/FLATPAK_APPS.tmp.txt") -gt 1000 ]]; then
             N_NAME="$(grep -o "NAME" "/tmp/FLATPAK_APPS.tmp.txt" | wc -l)"
             N_APPID="$(grep -o "APP_ID" "/tmp/FLATPAK_APPS.tmp.txt" | wc -l)"
             N_DESCR="$(grep -o "Descr" "/tmp/FLATPAK_APPS.tmp.txt" | wc -l)"
             if [ "${N_NAME}" -ge 100 ] && [ "${N_APPID}" -ge 100 ] && [ "${N_DESCR}" -ge 100 ]; then
               cat "/tmp/FLATPAK_APPS.tmp.txt" > "${GITHUB_WORKSPACE}/main/FLATPAK_APPS_INFO.txt"
             fi
          fi
          #Fetch API Stuff
          curl -A "${USER_AGENT}" -qfsSL "https://flathub.org/api/v2/appstream" | jq -r '.[]' > "${GITHUB_WORKSPACE}/main/FLATPAK_APP_IDS.txt"
          curl -A "${USER_AGENT}" -qfsSL "https://flathub.org/api/v2/popular/last-month?locale=en" | jq '.' > "${GITHUB_WORKSPACE}/main/FLATPAK_POPULAR.json"
          curl -A "${USER_AGENT}" -qfsSL "https://flathub.org/api/v2/trending/last-two-weeks?locale=en" | jq '.' > "${GITHUB_WORKSPACE}/main/FLATPAK_TRENDING.json"
        continue-on-error: true

      - name: Sync Metadata (ROOT)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          #Generate
          pushd "${GITHUB_WORKSPACE}/main" >/dev/null 2>&1
           ##Get JSON
           #aarch64-Linux
            curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux/METADATA.json" -o "${SYSTMP}/aarch64-Linux-METADATA.json" || echo '{}' > "${SYSTMP}/aarch64-Linux-METADATA.json"
           #x86_64-Linux
            curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux/METADATA.json" -o "${SYSTMP}/x86_64-Linux-METADATA.json" || echo '{}' > "${SYSTMP}/x86_64-Linux-METADATA.json"
           ##Merge
            jq -s '[{ "host": "aarch64-Linux", "main": .[0] },{ "host": "x86_64-Linux", "main": .[1] }]' "${SYSTMP}/aarch64-Linux-METADATA.json" "${SYSTMP}/x86_64-Linux-METADATA.json" | jq . > "${GITHUB_WORKSPACE}/main/METADATA.json"
            sed "s|https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux|https://pkgcache.pkgforge.dev/aarch64-Linux|g" "${GITHUB_WORKSPACE}/main/METADATA.json" | sed "s|https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux|https://pkgcache.pkgforge.dev/x86_64-Linux|g" | jq -r tostring > "${GITHUB_WORKSPACE}/main/METADATA.min.json"
           #Gen Yaml
            cat "${GITHUB_WORKSPACE}/main/METADATA.json" | yj -jy | yq . > "${GITHUB_WORKSPACE}/main/METADATA.yaml"
            cat "${GITHUB_WORKSPACE}/main/METADATA.min.json" | yj -jy | yq . > "${GITHUB_WORKSPACE}/main/METADATA.min.yaml"
          popd >/dev/null 2>&1
          ##Sync
           if jq --exit-status . "${GITHUB_WORKSPACE}/main/METADATA.json" >/dev/null 2>&1; then
             pushd "$(mktemp -d)" >/dev/null 2>&1 && git clone --depth="1" --filter="blob:none" --no-checkout "https://huggingface.co/datasets/pkgforge/pkgcache" && cd "./pkgcache"
               git lfs install
               huggingface-cli lfs-enable-largefiles "." ; df -h
               git fetch origin main ; git lfs track "./FLATPAK_APPSTREAM.xml" "./FLATPAK_APPS_INFO.txt" "./FLATPAK_APP_IDS.txt" "./FLATPAK_POPULAR.json" "./FLATPAK_TRENDING.json" "./METADATA.json" "./METADATA.min.json" "./METADATA.yaml" "./METADATA.min.yaml"
               git sparse-checkout set ""
               git sparse-checkout set --no-cone --sparse-index "/FLATPAK_APPSTREAM.xml" "/FLATPAK_APPS_INFO.txt" "/FLATPAK_APP_IDS.txt" "/FLATPAK_POPULAR.json" "/FLATPAK_TRENDING.json" "/METADATA.json" "/METADATA.min.json" "/METADATA.yaml" "/METADATA.min.yaml"
               git checkout ; ls -lah "."
               cat "${GITHUB_WORKSPACE}/main/FLATPAK_APPSTREAM.xml" > "./FLATPAK_APPSTREAM.xml"
               cat "${GITHUB_WORKSPACE}/main/FLATPAK_APPS_INFO.txt" > "./FLATPAK_APPS_INFO.txt"
               cat "${GITHUB_WORKSPACE}/main/FLATPAK_APP_IDS.txt" > "./FLATPAK_APP_IDS.txt"
               cat "${GITHUB_WORKSPACE}/main/FLATPAK_POPULAR.json" | jq . > "./FLATPAK_POPULAR.json"
               cat "${GITHUB_WORKSPACE}/main/FLATPAK_TRENDING.json" | jq . > "./FLATPAK_TRENDING.json"
               cat "${GITHUB_WORKSPACE}/main/METADATA.json" | jq . > "./METADATA.json"
               cat "${GITHUB_WORKSPACE}/main/METADATA.min.json" | jq . > "./METADATA.min.json"
               cat "${GITHUB_WORKSPACE}/main/METADATA.yaml" | yq . > "./METADATA.yaml"
               cat "${GITHUB_WORKSPACE}/main/METADATA.min.yaml" | yq . > "./METADATA.min.yaml"
               find "." -type f -size -3c -delete
               git add --all --verbose && git commit -m "[+] METADATA (ROOT) $(TZ='UTC' date +'%Y_%m_%d')]" ; df -h
               git pull origin main ; git push origin main
             popd >/dev/null 2>&1
           fi
        continue-on-error: true

      - name: Generate All-In-One (aarch64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          ##Main (bin.pkgforge.dev)
          curl -qfsSL "https://bin.pkgforge.dev/aarch64/METADATA.json" -o "${SYSTMP}/METADATA.json.src"
          if [ "$(jq '. | length' "${SYSTMP}/METADATA.json.src")" -gt 1000 ]; then
             cat "${SYSTMP}/METADATA.json.src" |\
             jq -r '
               .[] | 
               "[[bin]]\n" +
               "pkg = \"\(.name)\"\n" +
               "pkg_name = \"\(.name | gsub("\\.no_strip"; ""))\"\n" +
               "description = \"\(.description)\"\n" +
               "note = \"\(.note)\"\n" +
               "version = \"" + (if has("repo_version") then (if .repo_version == "" then "latest" else .repo_version end) else "latest" end) + "\"\n" +
               "download_url = \"" + (.download_url | sub("https://bin.ajam.dev/aarch64_arm64_Linux/"; "https://bin.pkgforge.dev/aarch64/")) + "\"\n" +
               "size = \"\(.size | ascii_upcase)\"\n" +
               "bsum = \"\(.b3sum)\"\n" +
               "shasum = \"\(.sha256)\"\n" +
               "build_date = \"\(.build_date)\"\n" +
               "src_url = \"\(.repo_url)\"\n" +
               "homepage = \"\(.web_url)\"\n" +
               "build_script = \"\(.build_script)\"\n" +
               "build_log = \"https://bin.pkgforge.dev/aarch64/\(.name).log.txt\"\n" +
               "category = \"" + (if .repo_topics == "" then "utility" else .repo_topics end) + "\"\n" +
               "icon = \"" + (if .icon == null or .icon == "" then "https://bin.pkgforge.dev/aarch64/bin.default.png" else .icon end) + "\"\n" +
               "provides = \"\(.extra_bins)\"\n"
             ' 2>/dev/null > "${SYSTMP}/aarch64-Linux-METADATA.toml"
             validtoml "${SYSTMP}/aarch64-Linux-METADATA.toml"
             ##BaseUtils (bin.pkgforge.dev)
             curl -qfsSL "https://bin.pkgforge.dev/aarch64/Baseutils/METADATA.json" |\
             jq -r '
               .[] | 
               "[[base]]\n" +
               "pkg = \"\(.name)\"\n" +
               "pkg_name = \"\(.name | gsub("\\.no_strip"; ""))\"\n" +
               "description = \"\(.description)\"\n" +
               "note = \"\(.note)\"\n" +
               "version = \"" + (if has("repo_version") then (if .repo_version == "" then "latest" else .repo_version end) else "latest" end) + "\"\n" +
               "download_url = \"" + (.download_url | sub("https://bin.ajam.dev/aarch64_arm64_Linux/"; "https://bin.pkgforge.dev/aarch64/")) + "\"\n" +
               "size = \"\(.size | ascii_upcase)\"\n" +
               "bsum = \"\(.b3sum)\"\n" +
               "shasum = \"\(.sha256)\"\n" +
               "build_date = \"\(.build_date)\"\n" +
               "src_url = \"\(.repo_url)\"\n" +
               "homepage = \"\(.web_url)\"\n" +
               "build_script = \"\(.build_script)\"\n" +
               "build_log = \"https://bin.pkgforge.dev/x86_64/" + (if (.build_script | type) == "string" and (.build_script | test(".*/.*\\..+")) then (.build_script | split("/") | last | split(".") | .[0]) else .name end) + ".log\"\n" +
               "category = \"" + (if .repo_topics == "" then "utility" else .repo_topics end) + "\"\n" +
               "icon = \"" + (if .icon == null or .icon == "" then "https://bin.pkgforge.dev/aarch64/base.default.png" else .icon end) + "\"\n" +
               "provides = \"\(.extra_bins)\"\n"
             ' 2>/dev/null >> "${SYSTMP}/aarch64-Linux-METADATA.toml"
             validtoml "${SYSTMP}/aarch64-Linux-METADATA.toml"
             ##Main (pkgcache.pkgforge.dev)
             curl -qfsSL "https://pkgcache.pkgforge.dev/aarch64/METADATA.min.json" |\
             jq -r '
               .[] |
               "[[pkg]]\n" +
               "pkg = \"\(.name)\"\n" +
               "pkg_id = \"\(.bin_id)\"\n" +
               "pkg_name = \"\(.bin_name)\"\n" +
               "description = \"\(.description)\"\n" +
               "note = \"\(.note)\"\n" +
               "version = \"\(.version)\"\n" +
               "download_url = \"\(.download_url)\"\n" +
               "size = \"\(.size | ascii_upcase)\"\n" +
               "bsum = \"\(.bsum)\"\n" +
               "shasum = \"\(.shasum)\"\n" +
               "build_date = \"\(.build_date)\"\n" +
               "repology = \"\(.repology)\"\n" +
               "src_url = \"\(.src_url)\"\n" +
               "homepage = \"\(.web_url)\"\n" +
               "build_script = \"\(.build_script)\"\n" +
               "build_log = \"\(.build_log)\"\n" +
               "appstream = \"\(.appstream)\"\n" +
               "category = \"\(.category)\"\n" +
               "desktop = \"\(.desktop)\"\n" +
               "icon = \"" + (if .icon == null or .icon == "" then "https://pkgcache.pkgforge.dev/aarch64/pkg.default.png" else .icon end) + "\"\n" +
               "screenshots = [" +
                 ( .screenshots // [] | map("\"" + . + "\"") | join(", ")) +
               "]\n" +
               "provides = \"\(.provides)\"\n" +
               "snapshots = [" +
                 ( .snapshots // [] | map("\"" + . + "\"") | join(", ")) +
               "]\n"
             ' 2>/dev/null >> "${SYSTMP}/aarch64-Linux-METADATA.toml"
             validtoml "${SYSTMP}/aarch64-Linux-METADATA.toml"
             #TOML
             taplo check "${SYSTMP}/aarch64-Linux-METADATA.toml" && cp "${SYSTMP}/aarch64-Linux-METADATA.toml" "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.xz" "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.zstd.bsum"
             #JSON
             cat "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml" | yj -tj | jq 'to_entries | sort_by(.key) | from_entries' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.xz" "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.zstd.bsum"
             #JSON (capnp)
             to-capnp -i "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.xz" "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.zstd.bsum"
             #JSON (MIN)
             cat "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" | jq -r tostring > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.xz" "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.zstd.bsum"
             #YAML
             cat "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml" | yj -ty | yq . > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.xz" "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.zstd.bsum"
             #AM
             cat "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" | jq -r '.bin[] | "| \(.pkg) | \(.description) | \((.src_url | select(. != "")) // .homepage) | \(.download_url) | \((.bsum // "latest")[:12]) |"' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/AM.txt"
             cat "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" | jq -r '.base[] | "| \(.pkg) | \(.description) | \((.src_url | select(. != "")) // .homepage) | \(.download_url) | \((.bsum // "latest")[:12]) |"' >> "${GITHUB_WORKSPACE}/main/aarch64-Linux/AM.txt" 
             cat "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" | jq -r '.pkg[] | "| \(.pkg) | \(.description) | \((.src_url | select(. != "")) // .homepage) | \(.download_url) | \(if .version and ((.version|tostring) | test("^[a-zA-Z0-9.-]+$")) then .version else (.bsum // "latest")[:12] end) |"' >> "${GITHUB_WORKSPACE}/main/aarch64-Linux/AM.txt"
             sort -u "${GITHUB_WORKSPACE}/main/aarch64-Linux/AM.txt" -o "${GITHUB_WORKSPACE}/main/aarch64-Linux/AM.txt"
             sed '/|[[:space:]]*|/d' -i "${GITHUB_WORKSPACE}/main/aarch64-Linux/AM.txt"
          fi
        continue-on-error: true

      - name: Generate Hot/Popular/Trending List (aarch64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          #Popular
          POPULAR="$(jq -r '.hits[].app_id | ascii_downcase' "${GITHUB_WORKSPACE}/main/FLATPAK_POPULAR.json" | jq -R . | jq -s .)"
          jq --argjson POPULAR "${POPULAR}" '
            .pkg[] | select((.bin_id | ascii_downcase) as $id | $POPULAR | index($id)) |
            {name: .name, bin_id: .bin_id, description: .description, icon: .icon}
          ' "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" | jq -s '.' > "${SYSTMP}/POPULAR.json.tmp"
          if jq --exit-status . "${SYSTMP}/POPULAR.json.tmp" >/dev/null 2>&1; then
             cat "${SYSTMP}/POPULAR.json.tmp" | jq . > "${GITHUB_WORKSPACE}/main/aarch64-Linux/POPULAR.json"
          fi
          #Trending
          TRENDING="$(jq -r '.hits[].app_id | ascii_downcase' "${GITHUB_WORKSPACE}/main/FLATPAK_TRENDING.json" | jq -R . | jq -s .)"
          jq --argjson TRENDING "${TRENDING}" '
            .pkg[] | select((.bin_id | ascii_downcase) as $id | $TRENDING | index($id)) |
            {name: .name, bin_id: .bin_id, description: .description, icon: .icon}
          ' "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" | jq -s '.' > "${SYSTMP}/TRENDING.json.tmp"
          if jq --exit-status . "${SYSTMP}/TRENDING.json.tmp" >/dev/null 2>&1; then
             cat "${SYSTMP}/TRENDING.json.tmp" | jq . > "${GITHUB_WORKSPACE}/main/aarch64-Linux/TRENDING.json"
          fi
        continue-on-error: true

      - name: Generate New List (aarch64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          pushd "$(mktemp -d)" >/dev/null 2>&1 && git clone --filter="blob:none" --no-checkout "https://huggingface.co/datasets/pkgforge/pkgcache" && cd "./pkgcache"
          git sparse-checkout set "" && git checkout
          #Generate New Pkgs
           if jq --exit-status . "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" >/dev/null 2>&1; then 
             git --no-pager log --since='7 days ago' --diff-filter=A --name-only | grep -Ei "aarch64-Linux" | grep -E '\.(AppBundle|AppImage|FlatImage|NixAppImage|RunImage)$' | sort -u | while read -r G_FILE; do
                C_COUNT="$(git log --oneline -- "${G_FILE}" | wc -l)"
                if [ "${C_COUNT}" -le 2 ]; then
                    echo "${G_FILE}"
                fi
             done | sed 's|.*/||' | sort -u | jq -R '.' | jq -s '.' > "${SYSTMP}/LATEST.json.tmp"
             if jq --exit-status . "${SYSTMP}/LATEST.json.tmp" >/dev/null 2>&1; then
                LATEST="$(cat "${SYSTMP}/LATEST.json.tmp")"
                jq --argjson LATEST "${LATEST}" '.pkg[] | select((.name | ascii_downcase) as $name | ($LATEST | map(ascii_downcase) | index($name))) | {name: .name, bin_id: .bin_id, description: .description, icon: .icon}' "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" | jq -s '.' > "${SYSTMP}/LATEST.json"
                if jq --exit-status . "${SYSTMP}/LATEST.json" >/dev/null 2>&1; then
                  cat "${SYSTMP}/LATEST.json" | jq . > "${GITHUB_WORKSPACE}/main/aarch64-Linux/LATEST.json"
                fi
             fi
           fi
          rm -rf "$(realpath .)" ; popd >/dev/null 2>&1
        continue-on-error: true

      - name: Sync Metadata --> HF (aarch64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          ##Sync
           pushd "$(mktemp -d)" >/dev/null 2>&1 && git clone --depth="1" --filter="blob:none" --no-checkout "https://huggingface.co/datasets/pkgforge/pkgcache" && cd "./pkgcache"
             git lfs install
             huggingface-cli lfs-enable-largefiles "." ; df -h
             git sparse-checkout set ""
             git sparse-checkout set --no-cone --sparse-index "aarch64-Linux/*.json" "aarch64-Linux/*.log" "aarch64-Linux/*.png" "aarch64-Linux/*.temp" "aarch64-Linux/*.toml" "aarch64-Linux/*.tmp" "aarch64-Linux/*.txt" "aarch64-Linux/*.yaml" "aarch64-Linux/*.yml"
             git checkout ; ls -lah "." "./aarch64-Linux"
             git sparse-checkout list
             #copy TOML
             taplo check "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml" && cp "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml" "./aarch64-Linux/METADATA.AIO.toml"
             #copy json
             if jq --exit-status . "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" >/dev/null 2>&1; then
               cp -fv "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" "./aarch64-Linux/METADATA.AIO.json"
               cp -fv "${GITHUB_WORKSPACE}/main/aarch64-Linux/LATEST.json" "./aarch64-Linux/LATEST.json"
               cp -fv "${GITHUB_WORKSPACE}/main/aarch64-Linux/POPULAR.json" ".aarch64-Linux/POPULAR.json"
               cp -fv "${GITHUB_WORKSPACE}/main/aarch64-Linux/TRENDING.json" "./aarch64-Linux/TRENDING.json"
               #AM
               cp -fv "${GITHUB_WORKSPACE}/main/aarch64-Linux/AM.txt" "./aarch64-Linux/AM.txt"
             fi
             #copy min.json
             if jq --exit-status . "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json" >/dev/null 2>&1; then
               cp -fv "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json" "./aarch64-Linux/METADATA.AIO.min.json"
             fi
             #copy yaml
             if yq --exit-status . "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml" >/dev/null 2>&1; then
               cp -fv "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml" "./aarch64-Linux/METADATA.AIO.yaml"
             fi
             #copy icon
             cp -fv "${GITHUB_WORKSPACE}/main/.github/assets/base.png" "./aarch64-Linux/base.default.png"
             cp -fv "${GITHUB_WORKSPACE}/main/.github/assets/bin.png" "./aarch64-Linux/bin.default.png"
             cp -fv "${GITHUB_WORKSPACE}/main/.github/assets/pkg.png" "./aarch64-Linux/pkg.default.png"
             find "." -type f -size -3c -delete
             git add --all --verbose && git commit -m "[+] METADATA (AIO) $(TZ='UTC' date +'%Y_%m_%d')]"
             git pull origin main ; git push origin main
           popd >/dev/null 2>&1
        continue-on-error: true

      - name: Generate All-In-One (x86_64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          ##Main (bin.pkgforge.dev)
          curl -qfsSL "https://bin.pkgforge.dev/x86_64/METADATA.json" -o "${SYSTMP}/METADATA.json.src"
          if [ "$(jq '. | length' "${SYSTMP}/METADATA.json.src")" -gt 1000 ]; then
             cat "${SYSTMP}/METADATA.json.src" |\
             jq -r '
               .[] | 
               "[[bin]]\n" +
               "pkg = \"\(.name)\"\n" +
               "pkg_name = \"\(.name | gsub("\\.no_strip"; ""))\"\n" +
               "description = \"\(.description)\"\n" +
               "note = \"\(.note)\"\n" +
               "version = \"" + (if has("repo_version") then (if .repo_version == "" then "latest" else .repo_version end) else "latest" end) + "\"\n" +
               "download_url = \"" + (.download_url | sub("https://bin.ajam.dev/x86_64_Linux/"; "https://bin.pkgforge.dev/x86_64/")) + "\"\n" +
               "size = \"\(.size | ascii_upcase)\"\n" +
               "bsum = \"\(.b3sum)\"\n" +
               "shasum = \"\(.sha256)\"\n" +
               "build_date = \"\(.build_date)\"\n" +
               "src_url = \"\(.repo_url)\"\n" +
               "homepage = \"\(.web_url)\"\n" +
               "build_script = \"\(.build_script)\"\n" +
               "build_log = \"https://bin.pkgforge.dev/x86_64/\(.name).log.txt\"\n" +
               "category = \"" + (if .repo_topics == "" then "utility" else .repo_topics end) + "\"\n" +
               "icon = \"" + (if .icon == null or .icon == "" then "https://bin.pkgforge.dev/x86_64/bin.default.png" else .icon end) + "\"\n" +
               "provides = \"\(.extra_bins)\"\n"
             ' 2>/dev/null > "${SYSTMP}/x86_64-Linux-METADATA.toml"
             validtoml "${SYSTMP}/x86_64-Linux-METADATA.toml"
             ##BaseUtils (bin.pkgforge.dev)
             curl -qfsSL "https://bin.pkgforge.dev/x86_64/Baseutils/METADATA.json" |\
             jq -r '
               .[] | 
               "[[base]]\n" +
               "pkg = \"\(.name)\"\n" +
               "pkg_name = \"\(.name | gsub("\\.no_strip"; ""))\"\n" +
               "description = \"\(.description)\"\n" +
               "note = \"\(.note)\"\n" +
               "version = \"" + (if has("repo_version") then (if .repo_version == "" then "latest" else .repo_version end) else "latest" end) + "\"\n" +
               "download_url = \"" + (.download_url | sub("https://bin.ajam.dev/x86_64_Linux/"; "https://bin.pkgforge.dev/x86_64/")) + "\"\n" +
               "size = \"\(.size | ascii_upcase)\"\n" +
               "bsum = \"\(.b3sum)\"\n" +
               "shasum = \"\(.sha256)\"\n" +
               "build_date = \"\(.build_date)\"\n" +
               "src_url = \"\(.repo_url)\"\n" +
               "homepage = \"\(.web_url)\"\n" +
               "build_script = \"\(.build_script)\"\n" +
               "build_log = \"https://bin.pkgforge.dev/x86_64/" + (if (.build_script | type) == "string" and (.build_script | test(".*/.*\\..+")) then (.build_script | split("/") | last | split(".") | .[0]) else .name end) + ".log\"\n" +
               "category = \"" + (if .repo_topics == "" then "utility" else .repo_topics end) + "\"\n" +
               "icon = \"" + (if .icon == null or .icon == "" then "https://bin.pkgforge.dev/x86_64/base.default.png" else .icon end) + "\"\n" +
               "provides = \"\(.extra_bins)\"\n"
             ' 2>/dev/null >> "${SYSTMP}/x86_64-Linux-METADATA.toml"
             validtoml "${SYSTMP}/x86_64-Linux-METADATA.toml"
             ##Main (pkgcache.pkgforge.dev)
             curl -qfsSL "https://pkgcache.pkgforge.dev/x86_64/METADATA.min.json" |\
             jq -r '
               .[] |
               "[[pkg]]\n" +
               "pkg = \"\(.name)\"\n" +
               "pkg_id = \"\(.bin_id)\"\n" +
               "pkg_name = \"\(.bin_name)\"\n" +
               "description = \"\(.description)\"\n" +
               "note = \"\(.note)\"\n" +
               "version = \"\(.version)\"\n" +
               "download_url = \"\(.download_url)\"\n" +
               "size = \"\(.size | ascii_upcase)\"\n" +
               "bsum = \"\(.bsum)\"\n" +
               "shasum = \"\(.shasum)\"\n" +
               "build_date = \"\(.build_date)\"\n" +
               "repology = \"\(.repology)\"\n" +
               "src_url = \"\(.src_url)\"\n" +
               "homepage = \"\(.web_url)\"\n" +
               "build_script = \"\(.build_script)\"\n" +
               "build_log = \"\(.build_log)\"\n" +
               "appstream = \"\(.appstream)\"\n" +
               "category = \"\(.category)\"\n" +
               "desktop = \"\(.desktop)\"\n" +
               "icon = \"" + (if .icon == null or .icon == "" then "https://pkgcache.pkgforge.dev/x86_64/pkg.default.png" else .icon end) + "\"\n" +
               "screenshots = [" +
                 ( .screenshots // [] | map("\"" + . + "\"") | join(", ")) +
               "]\n" +
               "provides = \"\(.provides)\"\n" +
               "snapshots = [" +
                 ( .snapshots // [] | map("\"" + . + "\"") | join(", ")) +
               "]\n"
             ' 2>/dev/null >> "${SYSTMP}/x86_64-Linux-METADATA.toml"
             #TOML
             taplo check "${SYSTMP}/x86_64-Linux-METADATA.toml" && cp "${SYSTMP}/x86_64-Linux-METADATA.toml" "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.xz" "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.zstd.bsum"
             #JSON
             cat "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml" | yj -tj | jq 'to_entries | sort_by(.key) | from_entries' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.xz" "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.zstd.bsum"
             #JSON (capnp)
             to-capnp -i "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.xz" "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.zstd.bsum"
             #JSON (MIN)
             cat "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" | jq -r tostring > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.xz" "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.zstd.bsum"
             #YAML
             cat "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml" | yj -ty | yq . > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.bsum"
             7z a -t7z -mx="9" -mmt="$(($(nproc)+1))" -bsp1 -bt "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.xz" "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml" 2>/dev/null
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.xz" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.xz.bsum"
             zstd --ultra -22 --force "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.zstd"
             b3sum "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.zstd" | grep -oE '^[a-f0-9]{64}' | tr -d '[:space:]' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.zstd.bsum"
             #AM
             cat "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" | jq -r '.bin[] | "| \(.pkg) | \(.description) | \((.src_url | select(. != "")) // .homepage) | \(.download_url) | \((.bsum // "latest")[:12]) |"' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/AM.txt"
             cat "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" | jq -r '.base[] | "| \(.pkg) | \(.description) | \((.src_url | select(. != "")) // .homepage) | \(.download_url) | \((.bsum // "latest")[:12]) |"' >> "${GITHUB_WORKSPACE}/main/x86_64-Linux/AM.txt" 
             cat "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" | jq -r '.pkg[] | "| \(.pkg) | \(.description) | \((.src_url | select(. != "")) // .homepage) | \(.download_url) | \(if .version and ((.version|tostring) | test("^[a-zA-Z0-9.-]+$")) then .version else (.bsum // "latest")[:12] end) |"' >> "${GITHUB_WORKSPACE}/main/x86_64-Linux/AM.txt"
             sort -u "${GITHUB_WORKSPACE}/main/x86_64-Linux/AM.txt" -o "${GITHUB_WORKSPACE}/main/x86_64-Linux/AM.txt"
             sed '/|[[:space:]]*|/d' -i "${GITHUB_WORKSPACE}/main/x86_64-Linux/AM.txt"
          fi
        continue-on-error: true

      - name: Generate Hot/Popular/Trending List (x86_64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          #Popular
          POPULAR="$(jq -r '.hits[].app_id | ascii_downcase' "${GITHUB_WORKSPACE}/main/FLATPAK_POPULAR.json" | jq -R . | jq -s .)"
          jq --argjson POPULAR "${POPULAR}" '
            .pkg[] | select((.bin_id | ascii_downcase) as $id | $POPULAR | index($id)) |
            {name: .name, bin_id: .bin_id, description: .description, icon: .icon}
          ' "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" | jq -s '.' > "${SYSTMP}/POPULAR.json.tmp"
          if jq --exit-status . "${SYSTMP}/POPULAR.json.tmp" >/dev/null 2>&1; then
             cat "${SYSTMP}/POPULAR.json.tmp" | jq . > "${GITHUB_WORKSPACE}/main/x86_64-Linux/POPULAR.json"
          fi
          #Trending
          TRENDING="$(jq -r '.hits[].app_id | ascii_downcase' "${GITHUB_WORKSPACE}/main/FLATPAK_TRENDING.json" | jq -R . | jq -s .)"
          jq --argjson TRENDING "${TRENDING}" '
            .pkg[] | select((.bin_id | ascii_downcase) as $id | $TRENDING | index($id)) |
            {name: .name, bin_id: .bin_id, description: .description, icon: .icon}
          ' "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" | jq -s '.' > "${SYSTMP}/TRENDING.json.tmp"
          if jq --exit-status . "${SYSTMP}/TRENDING.json.tmp" >/dev/null 2>&1; then
             cat "${SYSTMP}/TRENDING.json.tmp" | jq . > "${GITHUB_WORKSPACE}/main/x86_64-Linux/TRENDING.json"
          fi
        continue-on-error: true

      - name: Generate New List (x86_64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          pushd "$(mktemp -d)" >/dev/null 2>&1 && git clone --filter="blob:none" --no-checkout "https://huggingface.co/datasets/pkgforge/pkgcache" && cd "./pkgcache"
          git sparse-checkout set "" && git checkout
          #Generate New Pkgs
           if jq --exit-status . "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" >/dev/null 2>&1; then 
             git --no-pager log --since='7 days ago' --diff-filter=A --name-only | grep -Ei "x86_64-Linux" | grep -E '\.(AppBundle|AppImage|FlatImage|NixAppImage|RunImage)$' | sort -u | while read -r G_FILE; do
                C_COUNT="$(git log --oneline -- "${G_FILE}" | wc -l)"
                if [ "${C_COUNT}" -le 2 ]; then
                    echo "${G_FILE}"
                fi
             done | sed 's|.*/||' | sort -u | jq -R '.' | jq -s '.' > "${SYSTMP}/LATEST.json.tmp"
             if jq --exit-status . "${SYSTMP}/LATEST.json.tmp" >/dev/null 2>&1; then
                LATEST="$(cat "${SYSTMP}/LATEST.json.tmp")"
                jq --argjson LATEST "${LATEST}" '.pkg[] | select((.name | ascii_downcase) as $name | ($LATEST | map(ascii_downcase) | index($name))) | {name: .name, bin_id: .bin_id, description: .description, icon: .icon}' "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" | jq -s '.' > "${SYSTMP}/LATEST.json"
                if jq --exit-status . "${SYSTMP}/LATEST.json" >/dev/null 2>&1; then
                  cat "${SYSTMP}/LATEST.json" | jq . > "${GITHUB_WORKSPACE}/main/x86_64-Linux/LATEST.json"
                fi
             fi
           fi
          rm -rf "$(realpath .)" ; popd >/dev/null 2>&1
        continue-on-error: true

      - name: Sync Metadata --> HF (x86_64-Linux)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          ##Sync
           pushd "$(mktemp -d)" >/dev/null 2>&1 && git clone --depth="1" --filter="blob:none" --no-checkout "https://huggingface.co/datasets/pkgforge/pkgcache" && cd "./pkgcache"
             git lfs install
             huggingface-cli lfs-enable-largefiles "." ; df -h
             git sparse-checkout set ""
             git sparse-checkout set --no-cone --sparse-index "x86_64-Linux/*.json" "x86_64-Linux/*.log" "x86_64-Linux/*.png" "x86_64-Linux/*.temp" "x86_64-Linux/*.toml" "x86_64-Linux/*.tmp" "x86_64-Linux/*.txt" "x86_64-Linux/*.yaml" "x86_64-Linux/*.yml"
             git checkout ; ls -lah "." "./x86_64-Linux"
             git sparse-checkout list
             #copy TOML
             taplo check "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml" && cp "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml" "./x86_64-Linux/METADATA.AIO.toml"
             #copy json
             if jq --exit-status . "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" >/dev/null 2>&1; then
               cp -fv "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" "./x86_64-Linux/METADATA.AIO.json"
               cp -fv "${GITHUB_WORKSPACE}/main/x86_64-Linux/LATEST.json" "./x86_64-Linux/LATEST.json"
               cp -fv "${GITHUB_WORKSPACE}/main/x86_64-Linux/POPULAR.json" "./x86_64-Linux/POPULAR.json"
               cp -fv "${GITHUB_WORKSPACE}/main/x86_64-Linux/TRENDING.json" "./x86_64-Linux/TRENDING.json"
               #AM
               cp -fv "${GITHUB_WORKSPACE}/main/x86_64-Linux/AM.txt" "./x86_64-Linux/AM.txt"
             fi
             #copy min.json
             if jq --exit-status . "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json" >/dev/null 2>&1; then
               cp -fv "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json" "./x86_64-Linux/METADATA.AIO.min.json"
             fi
             #copy yaml
             if yq --exit-status . "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml" >/dev/null 2>&1; then
               cp -fv "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml" "./x86_64-Linux/METADATA.AIO.yaml"
             fi
             #copy icon
             cp -fv "${GITHUB_WORKSPACE}/main/.github/assets/base.png" "./x86_64-Linux/base.default.png"
             cp -fv "${GITHUB_WORKSPACE}/main/.github/assets/bin.png" "./x86_64-Linux/bin.default.png"
             cp -fv "${GITHUB_WORKSPACE}/main/.github/assets/pkg.png" "./x86_64-Linux/pkg.default.png"
             find "." -type f -size -3c -delete
             git add --all --verbose && git commit -m "[+] METADATA (AIO) $(TZ='UTC' date +'%Y_%m_%d')]" ; df -h
             git pull origin main ; git push origin main
           popd >/dev/null 2>&1
        continue-on-error: true

      - name: Git Pull
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main" && git pull origin main
        continue-on-error: true

      - name: Update TOTAL_PACKAGES
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          ##aarch64-Linux/
           unset TOTAL_PACKAGES
           TOTAL_PACKAGES="$(curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/METADATA.json" | jq '.[] | select(.host == "aarch64-Linux") | .main' | jq -r '.[].name' | sort -u | wc -l)" && export TOTAL_PACKAGES="${TOTAL_PACKAGES}"
           sed "s|\(https://img.shields.io/badge/Packages-[(]*\)[0-9]\+|\1${TOTAL_PACKAGES}|" -i "$GITHUB_WORKSPACE/main/README.md"
           #sed 's#\(tree/main/aarch64-Linux)| \)[0-9]*\( |.*\)#\1'"${TOTAL_PACKAGES}"'\2#' -i "${GITHUB_WORKSPACE}/main/README.md"
          ##x86_64-Linux/
           unset TOTAL_PACKAGES
           TOTAL_PACKAGES="$(curl -qfsSL "https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/METADATA.json" | jq '.[] | select(.host == "x86_64-Linux") | .main' | jq -r '.[].name' | sort -u | wc -l)" && export TOTAL_PACKAGES="${TOTAL_PACKAGES}"
           sed -E "s|(https://img.shields.io/badge/Packages-[^(]*\([0-9]+\)\+\()[0-9]+|\1${TOTAL_PACKAGES}|" -i "$GITHUB_WORKSPACE/main/README.md"
           #sed 's#\(tree/main/x86_64-Linux)| \)[0-9]*\( |.*\)#\1'"${TOTAL_PACKAGES}"'\2#' -i "${GITHUB_WORKSPACE}/main/README.md"
        continue-on-error: true

      - name: Generate README (aarch64-Linux)
        run: |
          #presets
          set +x ; set +e
          #-------------#
          if jq empty "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.json" 2>/dev/null; then
            #Convert to YAML
             cat "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.json" | yj -jy | yq . > "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.yaml"
            ##Gen aarch64-Linux/DETAILED.md
             cat "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.json" | jq -r '.[] | "### [`\(.name // "" | if . == null or . == "" then "" else . end)` 📀](\(.download_url // "" | if . == null or . == "" then "" else . end))\n- **PKG_Name 📦:** \(.pkg_name // "" | if . == null or . == "" then "" else . end)\n- **Version 🧬:** `\(.version // "" | if . == null or . == "" then "" else . end)`\n- **Description ℹ️:** \(.description // "" | if . == null or . == "" then "" else . end)\n- **Note ⚠️:** \(.note // "" | if . == null or . == "" then "" else . end)\n- **Homepage 🌐:** [\(.web_url // "" | if . == null or . == "" then "" else . end)](\(.web_url // "" | if . == null or . == "" then "" else . end))\n- **Source 📡:** [\(.src_url // "" | if . == null or . == "" then "" else . end)](\(.src_url // "" | if . == null or . == "" then "" else . end))\n- **Download ⬇️:** \(.download_url // "" | if . == null or . == "" then "" else . end)\n- **Size 💾:** `\(.size // "" | if . == null or . == "" then "" else . end)`\n- **SHA256SUM 🔐:** `\(.shasum // "" | if . == null or . == "" then "" else . end)`\n- **B3SUM 🔐:** `\(.bsum // "" | if . == null or . == "" then "" else . end)`\n- **Script ⚙️:** \(.build_script // "" | if . == null or . == "" then "" else . end)\n- **Log 🧾:** \(.build_log // "" | if . == null or . == "" then "" else . end)\n- **Icon 🖼️:** \(.icon // "" | if . == null or . == "" then "" else . end)\n- **Desktop 🖥️:** \(.build_log | sub("\\.log$"; ".desktop"))\n- **Zsync ♻️:** \(.build_log | sub("\\.log$"; ".zsync"))\n\n---\n"' > "${GITHUB_WORKSPACE}/main/aarch64-Linux/DETAILED.md"
             sed "s|https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux|https://pkgcache.pkgforge.dev/aarch64-Linux|g" "${GITHUB_WORKSPACE}/main/aarch64-Linux/DETAILED.md" > "${GITHUB_WORKSPACE}/main/aarch64-Linux/DETAILED.min.md"
            ##aarch64-Linux/README.md
             { echo '|ICON 🖼️|PKG 📀|PKG_Name 📦|Version 🧬| Description ℹ️|Note ⚠️|Homepage 🌐|Source 📡|Size 💾|SHA256SUM 🔐|B3SUM 🔐|Script ⚙️|Log 🧾|' ; echo '| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |' ; cat "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.json" | sed 's/|/,/g' | jq -r '.[] | "| <img src=\"\(.icon // "" | if . == null or . == "" then "" else . end)\" width=\"28\" height=\"28\"> | [`\(.name // "" | if . == null or . == "" then "" else . end)`](\(.download_url // "" | if . == null or . == "" then "" else . end)) | \(.pkg_name // "" | if . == null or . == "" then "" else . end) | \(.version // "" | if . == null or . == "" then "" else . end) | \(.description // "" | if . == null or . == "" then "" else . end) | \(.note // "" | if . == null or . == "" then "" else . end) | [\(.web_url // "" | if . == null or . == "" then "" else . end)](\(.web_url // "" | if . == null or . == "" then "" else . end)) | [\(.src_url // "" | if . == null or . == "" then "" else . end)](\(.src_url // "" | if . == null or . == "" then "" else . end)) |\(.size // "" | if . == null or . == "" then "" else . end) | `\(.shasum // "" | if . == null or . == "" then "" else . end)` | `\(.bsum // "" | if . == null or . == "" then "" else . end)` | \(.build_script // "" | if . == null or . == "" then "" else . end) | \(.build_log // "" | if . == null or . == "" then "" else . end) | \(.category // "" | if . == null or . == "" then "" else . end) |"' ; } > "${GITHUB_WORKSPACE}/main/aarch64-Linux/README.md"
             sed 's/||//g' -i "${GITHUB_WORKSPACE}/main/aarch64-Linux/README.md"
             sed "s|https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/aarch64-Linux|https://pkgcache.pkgforge.dev/aarch64-Linux|g" "${GITHUB_WORKSPACE}/main/aarch64-Linux/README.md" > "${GITHUB_WORKSPACE}/main/aarch64-Linux/README.min.md"
          fi
        continue-on-error: true

      - name: Generate README (x86_64-Linux)
        run: |
          #presets
          set +x ; set +e
          #-------------#
          if jq empty "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.json" 2>/dev/null; then
            #Convert to YAML
             cat "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.json" | yj -jy | yq . > "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.yaml"
            ##Gen x86_64-Linux/DETAILED.md
             cat "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.json" | jq -r '.[] | "### [`\(.name // "" | if . == null or . == "" then "" else . end)` 📀](\(.download_url // "" | if . == null or . == "" then "" else . end))\n- **PKG_Name 📦:** \(.pkg_name // "" | if . == null or . == "" then "" else . end)\n- **Version 🧬:** `\(.version // "" | if . == null or . == "" then "" else . end)`\n- **Description ℹ️:** \(.description // "" | if . == null or . == "" then "" else . end)\n- **Note ⚠️:** \(.note // "" | if . == null or . == "" then "" else . end)\n- **Homepage 🌐:** [\(.web_url // "" | if . == null or . == "" then "" else . end)](\(.web_url // "" | if . == null or . == "" then "" else . end))\n- **Source 📡:** [\(.src_url // "" | if . == null or . == "" then "" else . end)](\(.src_url // "" | if . == null or . == "" then "" else . end))\n- **Download ⬇️:** \(.download_url // "" | if . == null or . == "" then "" else . end)\n- **Size 💾:** `\(.size // "" | if . == null or . == "" then "" else . end)`\n- **SHA256SUM 🔐:** `\(.shasum // "" | if . == null or . == "" then "" else . end)`\n- **B3SUM 🔐:** `\(.bsum // "" | if . == null or . == "" then "" else . end)`\n- **Script ⚙️:** \(.build_script // "" | if . == null or . == "" then "" else . end)\n- **Log 🧾:** \(.build_log // "" | if . == null or . == "" then "" else . end)\n- **Icon 🖼️:** \(.icon // "" | if . == null or . == "" then "" else . end)\n- **Desktop 🖥️:** \(.build_log | sub("\\.log$"; ".desktop"))\n- **Zsync ♻️:** \(.build_log | sub("\\.log$"; ".zsync"))\n\n---\n"' > "${GITHUB_WORKSPACE}/main/x86_64-Linux/DETAILED.md"
             sed "s|https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux|https://pkgcache.pkgforge.dev/x86_64-Linux|g" "${GITHUB_WORKSPACE}/main/x86_64-Linux/DETAILED.md" > "${GITHUB_WORKSPACE}/main/x86_64-Linux/DETAILED.min.md"
            ##x86_64-Linux/README.md
             { echo '|ICON 🖼️|PKG 📀|PKG_Name 📦|Version 🧬| Description ℹ️|Note ⚠️|Homepage 🌐|Source 📡|Size 💾|SHA256SUM 🔐|B3SUM 🔐|Script ⚙️|Log 🧾|' ; echo '| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |' ; cat "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.json" | sed 's/|/,/g' | jq -r '.[] | "| <img src=\"\(.icon // "" | if . == null or . == "" then "" else . end)\" width=\"28\" height=\"28\"> | [`\(.name // "" | if . == null or . == "" then "" else . end)`](\(.download_url // "" | if . == null or . == "" then "" else . end)) | \(.pkg_name // "" | if . == null or . == "" then "" else . end) | \(.version // "" | if . == null or . == "" then "" else . end) | \(.description // "" | if . == null or . == "" then "" else . end) | \(.note // "" | if . == null or . == "" then "" else . end) | [\(.web_url // "" | if . == null or . == "" then "" else . end)](\(.web_url // "" | if . == null or . == "" then "" else . end)) | [\(.src_url // "" | if . == null or . == "" then "" else . end)](\(.src_url // "" | if . == null or . == "" then "" else . end)) |\(.size // "" | if . == null or . == "" then "" else . end) | `\(.shasum // "" | if . == null or . == "" then "" else . end)` | `\(.bsum // "" | if . == null or . == "" then "" else . end)` | \(.build_script // "" | if . == null or . == "" then "" else . end) | \(.build_log // "" | if . == null or . == "" then "" else . end) | \(.category // "" | if . == null or . == "" then "" else . end) |"' ; } > "${GITHUB_WORKSPACE}/main/x86_64-Linux/README.md"
             sed 's/||//g' -i "${GITHUB_WORKSPACE}/main/x86_64-Linux/README.md"
             sed "s|https://huggingface.co/datasets/pkgforge/pkgcache/resolve/main/x86_64-Linux|https://pkgcache.pkgforge.dev/x86_64-Linux|g" "${GITHUB_WORKSPACE}/main/x86_64-Linux/README.md" > "${GITHUB_WORKSPACE}/main/x86_64-Linux/README.min.md"
          fi
        continue-on-error: true

      - name: Get DateTime & Purge files (=> 95 MB)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          UTC_TIME="$(TZ='UTC' date +'%Y-%m-%d (%I:%M:%S %p)')"
          echo "UTC_TIME=$UTC_TIME" >> $GITHUB_ENV
          #Purge
          find "${GITHUB_WORKSPACE}/main" -path "${GITHUB_WORKSPACE}/main/.git" -prune -o -type f -size +95M -exec rm -rvf "{}" + 2>/dev/null
        continue-on-error: true

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: ./main
          commit_user_name: Azathothas
          commit_user_email: AjamX101@gmail.com
          commit_message: "✅ Updated (Metadata) 🛍️ <-- ${{ env.UTC_TIME }} ⌚"
          #push_options: '--force'
        continue-on-error: true
#------------------------------------------------------------------------------------#
      - name: rClone BackUp Repo ("https://pub.ajam.dev/repos/${GITHUB_REPOSITORY}")
        run: |
          # Presets
          set +x ; set +e
          #--------------#
          #touch "$HOME/.rclone.conf"
          echo "${{ secrets.RCLONE_CF_R2_PUB }}" > "$HOME/.rclone.conf"
          #chdir to Repo
          cd "${GITHUB_WORKSPACE}/main"
          #Git pull
          git pull origin main --no-edit 2>/dev/null
          #Del Bloat
          rm -rf "$(pwd)/.git"
          #Upload to Pub
          echo -e "[+] Syncing ${GITHUB_REPOSITORY} to pub.ajam.dev/repos/${GITHUB_REPOSITORY} \n"
          rclone sync "." "r2:/pub/repos/${GITHUB_REPOSITORY}/" --user-agent="${USER_AGENT}" --buffer-size="100M" --s3-upload-concurrency="500" --s3-chunk-size="100M" --multi-thread-streams="500" --checkers="2000" --transfers="1000" --check-first --checksum --copy-links --fast-list --progress
          #Upload AIO files (aarch64-Linux) ==> (https://bin.ajam.dev/aarch64_arm64_Linux/)
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_APPSTREAM.xml" "r2:/bin/aarch64_arm64_Linux/FLATPAK_APPSTREAM.xml" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_APPS_INFO.txt" "r2:/bin/aarch64_arm64_Linux/FLATPAK_APPS_INFO.txt" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_APP_IDS.txt" "r2:/bin/aarch64_arm64_Linux/FLATPAK_APP_IDS.txt" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_POPULAR.json" "r2:/bin/aarch64_arm64_Linux/FLATPAK_POPULAR.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_TRENDING.json" "r2:/bin/aarch64_arm64_Linux/FLATPAK_TRENDING.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/AM.txt" "r2:/bin/aarch64_arm64_Linux/AM.txt" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/LATEST.json" "r2:/bin/aarch64_arm64_Linux/LATEST.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/POPULAR.json" "r2:/bin/aarch64_arm64_Linux/POPULAR.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/TRENDING.json" "r2:/bin/aarch64_arm64_Linux/TRENDING.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.json.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.xz" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.json.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.xz.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.json.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.zstd" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.json.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.json.zstd.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.json.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.min.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.min.json.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.xz" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.min.json.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.xz.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.min.json.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.zstd" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.min.json.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.min.json.zstd.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.min.json.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.soar.capnp" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.soar.capnp.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.xz" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.soar.capnp.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.xz.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.soar.capnp.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.zstd" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.soar.capnp.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.soar.capnp.zstd.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.soar.capnp.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.toml" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.toml.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.xz" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.toml.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.xz.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.toml.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.zstd" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.toml.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.toml.zstd.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.toml.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.yaml" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.yaml.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.xz" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.yaml.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.xz.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.yaml.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.zstd" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.yaml.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/aarch64-Linux/METADATA.AIO.yaml.zstd.bsum" "r2:/bin/aarch64_arm64_Linux/METADATA.AIO.yaml.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          wait
          #Upload AIO files (x86_64-Linux) ==> (https://bin.ajam.dev/x86_64_Linux/)
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_APPSTREAM.xml" "r2:/bin/x86_64_Linux/FLATPAK_APPSTREAM.xml" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_APPS_INFO.txt" "r2:/bin/x86_64_Linux/FLATPAK_APPS_INFO.txt" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_APP_IDS.txt" "r2:/bin/x86_64_Linux/FLATPAK_APP_IDS.txt" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_POPULAR.json" "r2:/bin/x86_64_Linux/FLATPAK_POPULAR.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/FLATPAK_TRENDING.json" "r2:/bin/x86_64_Linux/FLATPAK_TRENDING.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/AM.txt" "r2:/bin/x86_64_Linux/AM.txt" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/LATEST.json" "r2:/bin/x86_64_Linux/LATEST.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/POPULAR.json" "r2:/bin/x86_64_Linux/POPULAR.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/TRENDING.json" "r2:/bin/x86_64_Linux/TRENDING.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json" "r2:/bin/x86_64_Linux/METADATA.AIO.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.json.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.xz" "r2:/bin/x86_64_Linux/METADATA.AIO.json.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.xz.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.json.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.zstd" "r2:/bin/x86_64_Linux/METADATA.AIO.json.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.json.zstd.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.json.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json" "r2:/bin/x86_64_Linux/METADATA.AIO.min.json" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.min.json.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.xz" "r2:/bin/x86_64_Linux/METADATA.AIO.min.json.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.xz.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.min.json.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.zstd" "r2:/bin/x86_64_Linux/METADATA.AIO.min.json.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.min.json.zstd.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.min.json.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp" "r2:/bin/x86_64_Linux/METADATA.AIO.soar.capnp" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.soar.capnp.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.xz" "r2:/bin/x86_64_Linux/METADATA.AIO.soar.capnp.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.xz.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.soar.capnp.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.zstd" "r2:/bin/x86_64_Linux/METADATA.AIO.soar.capnp.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.soar.capnp.zstd.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.soar.capnp.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml" "r2:/bin/x86_64_Linux/METADATA.AIO.toml" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.toml.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.xz" "r2:/bin/x86_64_Linux/METADATA.AIO.toml.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.xz.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.toml.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.zstd" "r2:/bin/x86_64_Linux/METADATA.AIO.toml.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.toml.zstd.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.toml.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml" "r2:/bin/x86_64_Linux/METADATA.AIO.yaml" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.yaml.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.xz" "r2:/bin/x86_64_Linux/METADATA.AIO.yaml.xz" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.xz.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.yaml.xz.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.zstd" "r2:/bin/x86_64_Linux/METADATA.AIO.yaml.zstd" --checksum --check-first --user-agent="${USER_AGENT}" &
          rclone copyto "${GITHUB_WORKSPACE}/main/x86_64-Linux/METADATA.AIO.yaml.zstd.bsum" "r2:/bin/x86_64_Linux/METADATA.AIO.yaml.zstd.bsum" --checksum --check-first --user-agent="${USER_AGENT}" &
          wait
        continue-on-error: true
#------------------------------------------------------------------------------------#
